version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: eye_examination_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: eye_examination
      MYSQL_USER: eye_examination
      MYSQL_PASSWORD: eye_examination
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysql_logs:/var/log/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - eye_examination_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: eye_examination_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - eye_examination_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # Spring Boot后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eye_examination_backend
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: eye_examination
      MYSQL_USERNAME: eye_examination
      MYSQL_PASSWORD: eye_examination
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TZ: Asia/Shanghai
    volumes:
      - backend_logs:/app/logs
    networks:
      - eye_examination_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      timeout: 10s
      retries: 5
      interval: 30s

  # Vue3前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eye_examination_frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - eye_examination_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 10s
      retries: 5
      interval: 30s

  # 监控服务 (可选)
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: eye_examination_portainer
  #   restart: always
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   networks:
  #     - eye_examination_network

volumes:
  mysql_data:
    driver: local
  mysql_logs:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  # portainer_data:
  #   driver: local

networks:
  eye_examination_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 